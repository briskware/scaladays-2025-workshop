package com.rockthejvm.reviewboard.services

import zio.*
import com.rockthejvm.reviewboard.domain.Company
import com.rockthejvm.reviewboard.repositories.{CompanyRepository, CompanyRepositoryLive}
import com.rockthejvm.reviewboard.http.requests.CreateCompanyRequest
import io.getquill.SnakeCase
import io.getquill.jdbczio.Quill

import scala.io.StdIn

trait CompanyService {
  def create(req: CreateCompanyRequest): Task[Company]
  def getAll: Task[List[Company]]
  def getById(id: Long): Task[Option[Company]]
}

class CompanyServiceLive(repository: CompanyRepository) extends CompanyService {

  override def create(req: CreateCompanyRequest): Task[Company] = {
    val company = Company(
      id = 0, // ID will be generated by the database
      slug = Company.makeSlug(req.name),
      name = req.name,
      url = req.url
    )
    repository.create(company)
  }

  override def getAll: Task[List[Company]] = repository.getAll

  override def getById(id: Long): Task[Option[Company]] = repository.getById(id)
}

object CompanyServiceLive {
  val layer: URLayer[CompanyRepository, CompanyService] =
    ZLayer.fromFunction(new CompanyServiceLive(_))
}
